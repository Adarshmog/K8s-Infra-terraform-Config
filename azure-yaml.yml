trigger: none

variables:
- group: Terraform-SSH-Keys  # Contains SSH_PRIVATE_KEY and SSH_PUBLIC_KEY

stages:
- stage: Terraform
  displayName: "Terraform Lifecycle"
  jobs:
  - job: TerraformJob
    displayName: "Deploy Azure Resources"
    pool:
      name: 'adarsh'  # your self-hosted agent

    steps:
    - task: Checkout@1
      displayName: "Checkout GitHub Repository"

    # Login to Azure using the service connection
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureARM' # Replace with your service connectionz
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logged into Azure via service connection"
      displayName: "Azure Login"

    # Setup SSH Keys
    - script: |
        echo "$(SSH_PRIVATE_KEY)" > ~/.ssh/id_rsa
        echo "$(SSH_PUBLIC_KEY)" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa
        chmod 644 ~/.ssh/id_rsa.pub
      displayName: "Setup SSH Keys"

    # Terraform Init
    - script: |
        terraform init -backend-config="resource_group_name=OCEAN" \
                       -backend-config="storage_account_name=adarshmoger" \
                       -backend-config="container_name=maxi" \
                       -backend-config="key=k8sinfra.tfstate"
      displayName: "Terraform Init"

    # Terraform Validate
    - script: |
        terraform validate
      displayName: "Terraform Validate"

    # Terraform Plan
    - script: |
        terraform plan -var "public_key_path=~/.ssh/id_rsa.pub" \
                       -var "private_key_path=~/.ssh/id_rsa" \
                       -var-file="terraform.tfvars"
      displayName: "Terraform Plan"

    # Terraform Apply
    - script: |
        terraform apply -auto-approve -var "public_key_path=~/.ssh/id_rsa.pub" \
                                      -var "private_key_path=~/.ssh/id_rsa" \
                                      -var-file="terraform.tfvars"
      displayName: "Terraform Apply"

